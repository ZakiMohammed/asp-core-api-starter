// <auto-generated />
using System;
using BookStoreAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStoreAPI.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    [Migration("20200913085731_ValidationAdded")]
    partial class ValidationAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookStoreAPI.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            DOB = new DateTime(1985, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            AuthorId = 2,
                            DOB = new DateTime(1975, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Allen",
                            LastName = "Green"
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            Description = "Et dolore consetetur diam ea euismod duo te labore tincidunt diam ut dolor ut wisi nulla minim suscipit lorem et",
                            Price = 99.879999999999995,
                            Title = "SQL Server 2017"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            Description = "Sit elitr takimata augue sanctus ipsum et et lorem dolores accusam feugiat sanctus hendrerit iriure ipsum ut eros luptatum accusam",
                            Price = 78.150000000000006,
                            Title = "NodeJS For Beginners"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 1,
                            Description = "Tation amet diam sit sanctus takimata rebum at voluptua facilisis illum tempor erat sit elitr at invidunt feugiat accusam clita",
                            Price = 68.150000000000006,
                            Title = "Python For Snakes"
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 1,
                            Description = "Nisl duo iriure duo nisl no erat nulla sed volutpat amet lorem lorem feugiat est ut magna clita tation et",
                            Price = 59.149999999999999,
                            Title = "Angular Jump Start"
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.Book", b =>
                {
                    b.HasOne("BookStoreAPI.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
